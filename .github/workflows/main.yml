name: Test & Lint all

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-java:
    name: Java
    runs-on: ubuntu-latest
    env:
      working-directory: ./java
    steps:

      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Lint
        working-directory: ${{env.working-directory}}
        run: mvn spotbugs:check

      - name: Test
        working-directory: ${{env.working-directory}}
        run: mvn test

  test-go:
    name: Go
    runs-on: ubuntu-latest
    env:
      working-directory: ./go
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Install golangci-lint
        run: curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.24.0

      - name: Lint
        working-directory: ${{env.working-directory}}
        run: $(go env GOPATH)/bin/golangci-lint run ./...

      - name: Tests
        working-directory: ${{env.working-directory}}
        run: make test

  test-python:
    name: Python 3.5+
    runs-on: ubuntu-latest
    env:
      working-directory: ./python

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.5

      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: |
          python -m pip install --upgrade pip
          pip install .[tests]

      - name: Lint (flake8)
        working-directory: ${{env.working-directory}}
        run: |
          make lint

      - name: Type hints (mypy)
        working-directory: ${{env.working-directory}}
        run: |
          make type-hint

      - name: Test (pytest)
        working-directory: ${{env.working-directory}}
        run: |
          make test
