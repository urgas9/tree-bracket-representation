name: Test & Lint all

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  test-java:
    name: Java
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./java
    steps:

      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 1.8

      - name: Lint
        run: mvn spotbugs:check

      - name: Test
        run: mvn test

  test-go:
    name: Go
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./go
    steps:

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Install dependencies
        run: go get ./...

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.52.2

      - name: Lint
        run: $(go env GOPATH)/bin/golangci-lint run ./...

      - name: Tests
        run: make test

  test-python:
    name: Python 3.11
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./python

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[tests]

      - name: Lint (flake8)
        run: |
          make lint

      - name: Type hints (mypy)
        run: |
          make type-hint

      - name: Test (pytest)
        run: |
          make test

  test-kotlin:
    name: Kotlin
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./kotlin

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 1.8

      - name: Lint (ktlint)
        run: ./gradlew ktlintCheck

      - name: Test (JUnit 5)
        run: ./gradlew test

  test-rust:
    name: Rust
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Lint (clippy)
        run: make lint

      - name: Test
        run: make test
